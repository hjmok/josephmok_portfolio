[{"C:\\Users\\Josph.Mok\\resume-app\\src\\index.js":"1","C:\\Users\\Josph.Mok\\resume-app\\src\\App.js":"2","C:\\Users\\Josph.Mok\\resume-app\\src\\registerServiceWorker.js":"3","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\About.js":"4","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Header.js":"5","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Footer.js":"6","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Portfolio.js":"7","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Resume.js":"8","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Contact.js":"9","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Navbar.js":"10","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\App_test.js":"11","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_GANs.js":"12","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\GANs\\Results_GANs.js":"13","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_SSD.js":"14","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\SSD\\Results_SSD.js":"15","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Header.js":"16","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_FD.js":"17","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\FD with Haar Cascade\\Results_FD.js":"18","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Method.js":"19","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Plate.js":"20","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\Plate Blurring with OpenCV\\Results_Plate.js":"21","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_CNN.js":"22","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\CNN Cat Dog Classification\\Results_CNN.js":"23","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_AN.js":"24","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\CNN Alexnet Implementation\\Results_AN.js":"25","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_TG.js":"26","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Text Generator with LSTM\\Results_TG.js":"27","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_TFE.js":"28","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Ham or Spam Text Feature Extraction\\Results_TFE.js":"29","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_CB.js":"30","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Simple Chatbot\\Results_CB.js":"31","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Simple Chatbot\\Method_CB.js":"32","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_TM.js":"33","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Topic Modelling with LDA and NMF\\Results_TM.js":"34","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Topic Modelling with LDA and NMF\\Method_TM.js":"35","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Taxi.js":"36","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\NYC Taxi Fare ANN with PyTorch\\Results_Taxi.js":"37","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Bank.js":"38","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Income.js":"39","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Census Income ANN with PyTorch\\Results_Income.js":"40","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Bank Churn Rate ANN with Tensorflow\\Results_Bank.js":"41","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_RNNsd.js":"42","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\RNN Seasonal Data with PyTorch\\Results_RNNsd.js":"43","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\RNN Seasonal Data with PyTorch\\Method_RNNsd.js":"44","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_RNNgsp.js":"45","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\RNN Google Stock Price with Tensorflow\\Results_RNNgsp.js":"46","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\RNN Google Stock Price with Tensorflow\\Method_RNNgsp.js":"47","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_SOM.js":"48","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Self Organizing Maps\\Results_SOM.js":"49","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Self Organizing Maps\\Method_SOM.js":"50","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_RBM.js":"51","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Restricted Boltzmann Machines\\Results_RBM.js":"52","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Restricted Boltzmann Machines\\Method_RBM.js":"53","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_AE.js":"54","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\AutoEncoders\\Results_AE.js":"55","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\AutoEncoders\\Method_AE.js":"56","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_CH.js":"57","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\California Housing Linear Regression\\Method_CH.js":"58","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\California Housing Linear Regression\\Results_CH.js":"59","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_BC.js":"60","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\Breast Cancer Logistic Regression\\Results_BC.js":"61","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\Breast Cancer Logistic Regression\\Method_BC.js":"62","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_DS.js":"63","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\Disease Survival K Means Clustering\\Results_DS.js":"64","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\Disease Survival K Means Clustering\\Method_DS.js":"65","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_CC.js":"66","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\CC Default RFDTLR\\Method_CC.js":"67","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\CC Default RFDTLR\\Results_CC.js":"68"},{"size":353,"mtime":1616173420285,"results":"69","hashOfConfig":"70"},{"size":3400,"mtime":1616171989824,"results":"71","hashOfConfig":"70"},{"size":4021,"mtime":1609176848471,"results":"72","hashOfConfig":"70"},{"size":1847,"mtime":1615324491467,"results":"73","hashOfConfig":"70"},{"size":1925,"mtime":1616173835713,"results":"74","hashOfConfig":"70"},{"size":705,"mtime":1610909934847,"results":"75","hashOfConfig":"70"},{"size":4067,"mtime":1611095088140,"results":"76","hashOfConfig":"70"},{"size":2912,"mtime":1615682102764,"results":"77","hashOfConfig":"70"},{"size":2958,"mtime":1615390846664,"results":"78","hashOfConfig":"70"},{"size":286,"mtime":1609877031754,"results":"79","hashOfConfig":"70"},{"size":1421,"mtime":1611337818543,"results":"80","hashOfConfig":"70"},{"size":1234,"mtime":1610998408840,"results":"81","hashOfConfig":"70"},{"size":1363,"mtime":1610844023068,"results":"82","hashOfConfig":"70"},{"size":1232,"mtime":1610998267973,"results":"83","hashOfConfig":"70"},{"size":1873,"mtime":1610998736781,"results":"84","hashOfConfig":"70"},{"size":1837,"mtime":1616170061072,"results":"85","hashOfConfig":"70"},{"size":1244,"mtime":1610998288673,"results":"86","hashOfConfig":"70"},{"size":1511,"mtime":1610998690074,"results":"87","hashOfConfig":"70"},{"size":941,"mtime":1610998490377,"results":"88","hashOfConfig":"70"},{"size":1265,"mtime":1611003069146,"results":"89","hashOfConfig":"70"},{"size":1331,"mtime":1611004715733,"results":"90","hashOfConfig":"70"},{"size":1258,"mtime":1611094745986,"results":"91","hashOfConfig":"70"},{"size":2417,"mtime":1611345542672,"results":"92","hashOfConfig":"70"},{"size":1253,"mtime":1611168597943,"results":"93","hashOfConfig":"70"},{"size":2066,"mtime":1611426654151,"results":"94","hashOfConfig":"70"},{"size":1253,"mtime":1612028449668,"results":"95","hashOfConfig":"70"},{"size":5240,"mtime":1611615652000,"results":"96","hashOfConfig":"70"},{"size":1269,"mtime":1612035589969,"results":"97","hashOfConfig":"70"},{"size":5111,"mtime":1612069570848,"results":"98","hashOfConfig":"70"},{"size":1268,"mtime":1612216177958,"results":"99","hashOfConfig":"70"},{"size":1635,"mtime":1612331745834,"results":"100","hashOfConfig":"70"},{"size":1381,"mtime":1612328910851,"results":"101","hashOfConfig":"70"},{"size":1304,"mtime":1612495557111,"results":"102","hashOfConfig":"70"},{"size":3072,"mtime":1612561569011,"results":"103","hashOfConfig":"70"},{"size":1390,"mtime":1612564586578,"results":"104","hashOfConfig":"70"},{"size":1270,"mtime":1613057187943,"results":"105","hashOfConfig":"70"},{"size":1866,"mtime":1613166958559,"results":"106","hashOfConfig":"70"},{"size":1275,"mtime":1613409281855,"results":"107","hashOfConfig":"70"},{"size":1280,"mtime":1613246781019,"results":"108","hashOfConfig":"70"},{"size":1754,"mtime":1613248941539,"results":"109","hashOfConfig":"70"},{"size":1845,"mtime":1613168104556,"results":"110","hashOfConfig":"70"},{"size":1315,"mtime":1613421056353,"results":"111","hashOfConfig":"70"},{"size":1685,"mtime":1613598171364,"results":"112","hashOfConfig":"70"},{"size":1467,"mtime":1613421390390,"results":"113","hashOfConfig":"70"},{"size":1337,"mtime":1613583834824,"results":"114","hashOfConfig":"70"},{"size":2527,"mtime":1613664674759,"results":"115","hashOfConfig":"70"},{"size":1467,"mtime":1613583509698,"results":"116","hashOfConfig":"70"},{"size":1283,"mtime":1613749121019,"results":"117","hashOfConfig":"70"},{"size":2229,"mtime":1613760303115,"results":"118","hashOfConfig":"70"},{"size":1475,"mtime":1613759004559,"results":"119","hashOfConfig":"70"},{"size":1301,"mtime":1614279627848,"results":"120","hashOfConfig":"70"},{"size":1455,"mtime":1614283052858,"results":"121","hashOfConfig":"70"},{"size":1475,"mtime":1614279466822,"results":"122","hashOfConfig":"70"},{"size":1261,"mtime":1614283599464,"results":"123","hashOfConfig":"70"},{"size":1712,"mtime":1614363285651,"results":"124","hashOfConfig":"70"},{"size":1475,"mtime":1614283469879,"results":"125","hashOfConfig":"70"},{"size":1309,"mtime":1614542942055,"results":"126","hashOfConfig":"70"},{"size":1475,"mtime":1614542477768,"results":"127","hashOfConfig":"70"},{"size":1858,"mtime":1614544485297,"results":"128","hashOfConfig":"70"},{"size":1303,"mtime":1614717690043,"results":"129","hashOfConfig":"70"},{"size":2788,"mtime":1615087010169,"results":"130","hashOfConfig":"70"},{"size":1475,"mtime":1614717332688,"results":"131","hashOfConfig":"70"},{"size":1307,"mtime":1614873081315,"results":"132","hashOfConfig":"70"},{"size":1593,"mtime":1614874759547,"results":"133","hashOfConfig":"70"},{"size":1475,"mtime":1614873029142,"results":"134","hashOfConfig":"70"},{"size":1271,"mtime":1614975071577,"results":"135","hashOfConfig":"70"},{"size":1475,"mtime":1614975012085,"results":"136","hashOfConfig":"70"},{"size":3855,"mtime":1615086770404,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"u1qfzd",{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"140"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"140"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"140"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"140"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"140"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"140"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"140"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"140"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"140"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"140"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"140"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"140"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"140"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"140"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"140"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"140"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"140"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"140"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"140"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"140"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"140"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"140"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"140"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"140"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"140"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"140"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"140"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"140"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"140"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"140"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"140"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"140"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"140"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"140"},"C:\\Users\\Josph.Mok\\resume-app\\src\\index.js",[],["308","309"],"C:\\Users\\Josph.Mok\\resume-app\\src\\App.js",["310"],"import React, { Component } from 'react';\nimport GAN from './Components/Project_GANs';\nimport SSD from './Components/Project_SSD';\nimport FD from './Components/Project_FD';\nimport Plate from './Components/Project_Plate';\nimport CNN from './Components/Project_CNN';\nimport AN from './Components/Project_AN';\nimport TG from './Components/Project_TG';\nimport CB from './Components/Project_CB';\nimport TFE from './Components/Project_TFE';\nimport TM from './Components/Project_TM';\nimport Taxi from './Components/Project_Taxi';\nimport Bank from './Components/Project_Bank';\nimport Income from './Components/Project_Income';\nimport RNNsd from './Components/Project_RNNsd';\nimport RNNgsp from './Components/Project_RNNgsp';\nimport SOM from './Components/Project_SOM';\nimport RBM from './Components/Project_RBM';\nimport AE from './Components/Project_AE';\nimport CH from './Components/Project_CH';\nimport BC from './Components/Project_BC';\nimport DS from './Components/Project_DS';\nimport CC from './Components/Project_CC';\nimport {Route, Link} from 'react-router-dom';\nimport App_test from './Components/App_test';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Route exact path='/' component={App_test} />\n        <Route path=\"/GAN\" component={GAN}/>\n        <Route exact path=\"/SSD\" component={SSD}/>\n        <Route exact path=\"/FD\" component={FD}/>\n        <Route exact path=\"/license_plate\" component={Plate}/>\n        <Route exact path=\"/CNN\" component={CNN}/>    \n        <Route exact path=\"/AlexNet\" component={AN}/>   \n        <Route exact path=\"/TG\" component={TG}/>   \n        <Route exact path=\"/CB\" component={CB}/>     \n        <Route exact path=\"/TFE\" component={TFE}/>   \n        <Route exact path=\"/TM\" component={TM}/>   \n        <Route exact path=\"/Taxi\" component={Taxi}/>  \n        <Route exact path=\"/Bank\" component={Bank}/>                                                                                                                                                                                                                            \n        <Route exact path=\"/Income\" component={Income}/>         \n        <Route exact path=\"/SeasonalRNN\" component={RNNsd}/>           \n        <Route exact path=\"/StockPriceRNN\" component={RNNgsp}/>      \n        <Route exact path=\"/SOM\" component={SOM}/>\n        <Route exact path=\"/RBM\" component={RBM}/>\n        <Route exact path=\"/AE\" component={AE}/> \n        <Route exact path=\"/CH\" component={CH}/>     \n        <Route exact path=\"/BC\" component={BC}/> \n        <Route exact path=\"/DS\" component={DS}/>    \n        <Route exact path=\"/CC\" component={CC}n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n//<Route exact path=\"/project\" component={Project}/>","C:\\Users\\Josph.Mok\\resume-app\\src\\registerServiceWorker.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\About.js",["311","312"],"import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n\n    if(this.props.data){\n      var name = this.props.data.name;\n      var profilepic= \"images/\"+this.props.data.image;\n      var bio = this.props.data.bio;\n      var bio2 = this.props.data.bio2;\n      var bio3 = this.props.data.bio3;\n      var bio4 = this.props.data.bio4;\n      var street = this.props.data.address.street;\n      var city = this.props.data.address.city;\n      var state = this.props.data.address.state;\n      var zip = this.props.data.address.zip;\n      var phone= this.props.data.phone;\n      var email = this.props.data.email;\n      var resumeDownload = this.props.data.resumedownload;\n    }\n\n    return (\n      <section id=\"about\">\n      <div className=\"row\">\n         <div className=\"three columns\">\n            <img className=\"profile-pic\"  src={profilepic} />\n         </div>\n         <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n\n            <p>{bio}<br></br><br></br>{bio2}<br></br><br></br>{bio3}<br></br><br></br>{bio4}</p>\n            <div className=\"row\">\n               <div className=\"columns contact-details\">\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n\t\t\t\t\t\t   <span>{name}</span><br />\n\t\t\t\t\t\t   <span>{street}<br />\n\t\t\t\t\t\t         {city} {state}, {zip}\n                   </span><br />\n\t\t\t\t\t\t   <span>{phone}</span><br />\n                     <span>{email}</span>\n\t\t\t\t\t   </p>\n               </div>\n               <div className=\"columns download\">\n                  <p>\n                     <a href='./Resume/Template Resume.pdf' download className=\"button\"><i className=\"fa fa-download\"></i>Download Resume</a>\n                  </p>\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default About;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Header.js",["313","314","315"],"import React, { Component } from 'react';\nimport ParticlesBg  from \"particles-bg\";\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n       // var project = this.props.data.project;\n       var github = this.props.data.github;\n      var name = this.props.data.name;\n      var description= this.props.data.description;\n      var city= this.props.data.address.city;\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <header id=\"home\">\n      <ParticlesBg type=\"lines\" bg={true} />\n      <nav id=\"nav-wrap\">\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n\t         <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n            <li><a className=\"smoothscroll\" href=\"#portfolio\">Portfolio</a></li>\n            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n         </ul>\n      </nav>\n\n      <div className=\"row banner\">\n      \n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">{name}</h1>\n            <h3>{description}</h3>\n            <hr />\n            <ul className=\"social\">\n               <a href={github} target=\"_blank\" className=\"button btn github-btn\"><i className=\"fa fa-github\"></i>Github</a>\n            </ul>\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Footer.js",["316"],"import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url} target=\"_blank\"><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              {networks}\n           </ul>\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Portfolio.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Resume.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Contact.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Navbar.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\App_test.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_GANs.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\GANs\\Results_GANs.js",["317"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n\n            <h1>Results</h1>\n            <p align=\"center\">After 1500 epochs, the following example images were produced by the Generator</p>\n            <br></br>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_SSD.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\SSD\\Results_SSD.js",["318"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n          \n            <h1>Results</h1>\n            <p align=\"center\">Below are some personal videos of mine that I inputted into the SSD model!\n            <p> </p>\n            <ReactPlayer url='https://youtu.be/MYLPGvMp0bs' width = \"630px\" height = \"360px\"/>\n            <br></br>\n            <ReactPlayer url='https://youtu.be/_8VoK2-fehQ' width = \"630px\" height = \"360px\"/>\n            <br></br>\n            <ReactPlayer url='https://www.youtube.com/watch?v=e8vrAFZ4JP0' width = \"630px\" height = \"360px\"/>\n            <br></br>\n            <ReactPlayer url='https://youtu.be/rBO0Wv1EtwM' align=\"center\"/></p>\n            <br></br>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Header.js",["319","320","321"],"import React, { Component } from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport ParticlesBg from 'particles-bg'\n\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n       var project = this.props.data.project;\n       var github = this.props.data.github;\n      var name = this.props.data.name;\n      var description= this.props.data.description;\n    }\n    //color=\"#ff0000\"\n    return (\n      <header id=\"home\">\n      <ParticlesBg color=\"0BF7F3\" num={100} type=\"cobweb\" bg={true} />\n      <nav id=\"nav-wrap\">\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#Overview\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li>\n               <a href=\"/\">\n                  <Link to=\"/#/portfolio\" target=\"_blank\">\n                     Back\n                  </Link>\n               </a>\n            </li>\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Overview</a></li>\n\t         <li><a className=\"smoothscroll\" href=\"#resume\">Method</a></li>\n            <li><a className=\"smoothscroll\" href=\"#portfolio\">Results</a></li>\n         </ul>\n      </nav>\n\n      <div className=\"row banner\">\n      \n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">{name}</h1>\n            <h3>{description}.</h3>\n            <hr />\n            <ul className=\"social\">\n               <a href={github} target=\"_blank\" className=\"button btn github-btn\"><i className=\"fa fa-github\"></i>Github</a>\n            </ul>\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_FD.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\FD with Haar Cascade\\Results_FD.js",["322"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n          \n            <h1>Results</h1>\n            <p align=\"center\">Below is an example of the video detection program in action\n            <p> </p>\n            <ReactPlayer url='https://youtu.be/qhBYUu9Xmhw' width = \"630px\" height = \"360px\"/></p>\n            <br></br>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n",["323","324"],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Method.js",["325"],"import React, { Component } from 'react';\n\nclass Method extends Component {\n  \n  render() {\n\n    if(this.props.data){\n        var overview = this.props.data.overview.map(function(overview){\n        return <div key={overview.title}><h3>{overview.title}</h3>\n        <p>{overview.description1a}<br></br>{overview.description1b}<br></br>{overview.description1c}<a href={overview.description1d} target=\"_blank\">{overview.description1d}</a></p></div>  \n      })\n\n    }\n\n    return (\n      <section id=\"resume\">\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Method</span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {overview}\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default Method;\n\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Plate.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\Plate Blurring with OpenCV\\Results_Plate.js",["326"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n\n            <h1>Results</h1>\n            <p align=\"center\">Below are resulting images from the Detect and Blur function</p>\n            <br></br>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_CNN.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\CNN Cat Dog Classification\\Results_CNN.js",["327","328"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Tensorflow CNN Results</h1>\n            <p align=\"left\">After 40 epochs, the training accuracy was 92.6%. However, the validation accuracy was much lower at 78.6%, meaning overfitting occured. To improve this, dropout layers, batch normalization, and more convolutional layers should be used. Due to lack of computational power and time (no GPU), these improvements were added and tested on the PyTorch CNN instead. </p>\n            <h1>PyTorch CNN Results</h1>\n            <p align=\"left\">After 40 epochs, the training accuracy was found to be 77.5%. The validation accuracy was consistent with this at 76.6%, which is also supported by the accuracy plot below. This shows that the addition of dropout layers and batch normalization has helped to reduce overfitting from the Tensorflow results above. <br></br>In addition, the confusion matrix suggests that cats are more likely to be falsely predicted as dogs. An explanation for this may be due to cats having pointy ears similar spitz type dogs such as Huskies and Jindos. As such, the model may mislabel them as dogs (and the same could go for said dogs being mislabelled as cats).</p>\n            <br></br>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_AN.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\CV\\CNN Alexnet Implementation\\Results_AN.js",["329","330"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n          \n            <h1>AlexNet Results</h1>\n            <p align=\"left\">After 40 epochs, the training accuracy was found to be 91.6% and test accuracy was even better at 95.5%. This is already performing far better my CNN model which had a training accuracy of 77.5% and test accuracy was 76.6%. To improve my CNN model, more Convolutional layers can be added similar to AlexNet, as well as optimizing specific attributes such as kernel size and strides.\n            <br></br> Similar to my CNN's results, the confusion matrix below suggests that cats are still misclassified as dogs more often. An explanation for this may be due to cats having pointy ears similar spitz type dogs such as Huskies and Jindos. As such, the model may mislabel them as dogs (and the same could go for said dogs being mislabelled as cats).</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_TG.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Text Generator with LSTM\\Results_TG.js",["331","332"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n    if (this.props.data) {\n      var projects2 = this.props.data.projects2.map(function (projects2) {\n        var projectImage = 'images/portfolio/' + projects2.image;\n        \n        return (\n          <div key={projects2.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects2.url} title={projects2.title}>\n                <img alt={projects2.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects2.title}</h5>\n                    <p>{projects2.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    if (this.props.data) {\n      var projects3 = this.props.data.projects3.map(function (projects3) {\n        var projectImage = 'images/portfolio/' + projects3.image;\n        \n        return (\n          <div key={projects3.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects3.url} title={projects3.title}>\n                <img alt={projects3.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects3.title}</h5>\n                    <p>{projects3.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    if (this.props.data) {\n      var projects4 = this.props.data.projects4.map(function (projects4) {\n        var projectImage = 'images/portfolio/' + projects4.image;\n        \n        return (\n          <div key={projects4.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects4.url} title={projects4.title}>\n                <img alt={projects4.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects4.title}</h5>\n                    <p>{projects4.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n  \n    if (this.props.data) {\n      var projects5 = this.props.data.projects5.map(function (projects5) {\n        var projectImage = 'images/portfolio/' + projects5.image;\n        \n        return (\n          <div key={projects5.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects5.url} title={projects5.title}>\n                <img alt={projects5.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects5.title}</h5>\n                    <p>{projects5.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n          \n            <h1>Results</h1>\n            <p align=\"left\">Each book below trained on 40 epochs. The results show 1000 random characters generated by the model, all of which appear to follow the same tone and vibe as the original novels.</p>\n            <h1>Shakespeare Text Generation</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n            <h1>Tom Sawyer Text Generation</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects2}\n            </div>\n            <h1>Pride and Prejudice Text Generation</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects3}\n            </div>            \n            <h1>War and Peace Text Generation</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects4}\n            </div>            \n            <h1>Meditation Text Generation</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects5}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_TFE.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Ham or Spam Text Feature Extraction\\Results_TFE.js",["333","334"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n    if (this.props.data) {\n      var projects2 = this.props.data.projects2.map(function (projects2) {\n        var projectImage = 'images/portfolio/' + projects2.image;\n        \n        return (\n          <div key={projects2.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects2.url} title={projects2.title}>\n                <img alt={projects2.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects2.title}</h5>\n                    <p>{projects2.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n  \n    if (this.props.data) {\n      var projects3 = this.props.data.projects3.map(function (projects3) {\n        var projectImage = 'images/portfolio/' + projects3.image;\n        \n        return (\n          <div key={projects3.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects3.url} title={projects3.title}>\n                <img alt={projects3.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects3.title}</h5>\n                    <p>{projects3.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n          \n            <h1>Ham or Spam Dataset Results</h1>\n            <p align=\"left\">The final accuracy of this model was 98.5%. The resulting accuracy is very high due to the highly predictable sentence structure of spam messages. Often, they will start with positive words such as \"Congratulations\" and \"winner\" and end with prompts to respond. As long as the SMS text varies outside of this sentence structure, it can very easily be classified as not spam. Please see below the classification report, confusion matrix, and the predicted classes for new data.</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n            <h1>Positive or Negative Amazon Review Results</h1>\n            <p align=\"left\">The final accuracy of this model was 86.1%. This scored a lot lower than the Ham or Spam results due to the added complexity of reviews. <br></br> Often, the review will be vary long and using far more vocabulary. This was evidently shown by the resulting shape of X_train after being TFIDF vectorized. In Ham or Spam, 7462 unique words were found over 4179 messages, whereas in the Amazon reviews, 28262 unique words were found over 8000 reviews. The additional vocabulary can often be used for both positive and negative sentiments, thus making the model take into consideration the words prior to understand the context.<br></br>In addition, reviews may often have sentences praising parts of the product, but giving an overall negative final sentiment. This could confuse the model, and an example can be seen in the both the Amazon and Movie Review results below.  </p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects2}\n            </div>\n            <h1>Positive or Negative Movie Review Results</h1>\n            <p align=\"left\">Similar to the Amazon reviews, the final accuracy for this model was 84.5%. Looking over this dataset, the reviews for movies were often much longer than reviews for products on Amazon. Due to this, there is far more complexity as critics will often list multiple good and bad things about the film before the final verdict. For example, in the image below, Line 20 had a review praising the actors but criticizing the film was boring. Messages such as these are prone to incorrect classification by the model. </p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects3}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_CB.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Simple Chatbot\\Results_CB.js",["335","336"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n          \n            <h1>Results</h1>\n            <p align=\"left\">After 250 epochs, the training accuracy achieved almost 95% accuracy, whereas the validation accuracy was around 90%. This suggests the model overfit slightly, and parameters can be tweaked to reduce this, such as increasing the dropout rate. Please see below the accuracy plot, as well as sample example questions asked to the model.</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Simple Chatbot\\Method_CB.js",["337"],"import React, { Component } from 'react';\n\nclass Method extends Component {\n  \n  render() {\n\n    if(this.props.data){\n        var overview = this.props.data.overview.map(function(overview){\n          var overviewImage = 'images/portfolio/' + overview.image;\n          return <div key={overview.title}><h2>{overview.title}</h2>\n          <h5>{overview.title2}</h5><p>{overview.description1a}<br></br>{overview.description1b}<br></br>{overview.description1c}<a href={overview.description1d} target=\"_blank\">{overview.description1d}</a></p>\n          <div key={overview.imagetitle} className=\"columns portfolio-item\">\n            <div>\n                <img alt={overview.imagetitle} src={overviewImage} />\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{overview.imagetitle}</h5>\n                  </div>\n            </div>\n          </div>\n          </div> \n      })\n    }\n\n    return (\n      <section id=\"resume\">\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Method</span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {overview}\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default Method;\n\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_TM.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Topic Modelling with LDA and NMF\\Results_TM.js",["338","339"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    if (this.props.data) {\n      var projects2 = this.props.data.projects2.map(function (projects2) {\n        var projectImage = 'images/portfolio/' + projects2.image;\n        \n        return (\n          <div key={projects2.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects2.url} title={projects2.title}>\n                <img alt={projects2.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects2.title}</h5>\n                    <p>{projects2.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Latent Dirichlet Allocation Results</h1>\n            <p align=\"left\">For both the Quora and NPR dataset, LDA was able to cluster 12 and 6 topics respectively. The user interpretation of the resulting clusters appear to be somewhat successful based off the images below. <br></br> To improve the model, stricter max and min document frequencies can be used. Also, the user may want to try different number of topics, as 12 may have been too many for Quora due to the larger overlap between topics. </p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects2}\n            </div>\n          \n            <h1>Non-Negative Matrix Factorization Results</h1>\n            <p align=\"left\">Similar to LDA, the resulting clusters from NMF gave the users some overlapping interpretations. For example, NPR's Article 1 fell under the topic \"GOP\" in both LDA and NFM, but Article 4 was different between the two. <br></br> To further improve the model, NMF experiment with the same parameters listed in LDA above.</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\NLP\\Topic Modelling with LDA and NMF\\Method_TM.js",["340"],"import React, { Component } from 'react';\n\nclass Method extends Component {\n  \n  render() {\n\n    if(this.props.data){\n        var overview = this.props.data.overview.map(function(overview){\n          var overviewImage = 'images/portfolio/' + overview.image;\n          return <div key={overview.title}><h2>{overview.title}</h2>\n          <h5>{overview.title2}</h5><p>{overview.description1a}<br></br>{overview.description1b}<br></br>{overview.description1c}<a href={overview.description1d} target=\"_blank\"><br></br>{overview.description1d}</a></p>\n          <div key={overview.imagetitle} className=\"columns portfolio-item\">\n            <div>\n                <img alt={overview.imagetitle} src={overviewImage} />\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{overview.imagetitle}</h5>\n                  </div>\n            </div>\n          </div>\n          </div> \n      })\n    }\n\n    return (\n      <section id=\"resume\">\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Method</span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {overview}\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default Method;\n\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Taxi.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\NYC Taxi Fare ANN with PyTorch\\Results_Taxi.js",["341"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">Both models were trained on 450 epochs. As a result, the average root means squared error loss became 3.8764 for the Fare Amount Regression model. This means for every estimated fare, the model will be off by $3.88 on average. Moreover, the Fare Class Classification model resulted in a final the cross entropy loss of 0.272. <br></br> To improve both models, more optimization with the layer size and dropout rate can be tuned. In addition, the MSE LOSS plot below shows the loss was still declining slowly. As such, the Fare Amount Regression model could've kept training for a few more epochs to reduce the loss.</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Bank.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_Income.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Census Income ANN with PyTorch\\Results_Income.js",["342"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">The model was trained for 500 epochs. The model performed well on the test set, being correct 85.75% of the time. However, as seen in the Loss plot below, the loss was still slowly reducing. As such, training on a few dozen more epochs could've achieved a marginally better accuracy.<br>\n            </br>Moreover, the dataset was unbalanced, containing 72% of class 0 (below $50k) and 28% class 1 (above $50k). As such, a training on a more even dataset could provide more insight to the latter label  </p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Bank Churn Rate ANN with Tensorflow\\Results_Bank.js",["343"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">The model was set to train for 300 epochs, but stopped at epoch 167 due to Early Stopping. As seen in the Classification Report, the model has an overall accuracy of 87%. However, the model has a much higher recall for Staying compared to Exiting. <br>\n            </br>The Confusion Matrix also supports this, as it shows 268 exiting customers were misclassified as staying. This may be due to how uneven the dataset labels are (7963 stay, 2037 exit). As such, to improve the model, a more even dataset can be used so that the model can train more on the properties of customers that exited.  </p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_RNNsd.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\RNN Seasonal Data with PyTorch\\Results_RNNsd.js",["344"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">Both models were trained for 200 epochs. As seen in the images below, the predicted values are within the same scale as the labels when compared for the last 12 months. More importantly, the general trend is followed, showing the model understands when seasons of low and high consumption are expected. Furthermore, the trend pattern is continued when predicting for later dates that are beyond the datasets.</p>            \n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\RNN Seasonal Data with PyTorch\\Method_RNNsd.js",["345","346"],"import React, { Component } from 'react';\n\nclass Method extends Component {\n  \n  render() {\n\n    if(this.props.data){\n        var overview = this.props.data.overview.map(function(overview){\n          var overviewImage = 'images/portfolio/' + overview.image;\n          return <div key={overview.title}><h2>{overview.title}</h2>\n          <h5>{overview.title2}</h5><p>{overview.description1a}<br></br>{overview.description1b}<br></br>{overview.description1c}<a href={overview.description1d} target=\"_blank\">{overview.description1d}</a><br></br><a href={overview.description1e} target=\"_blank\">{overview.description1e}</a></p>\n          <div key={overview.imagetitle} className=\"columns portfolio-item\">\n            <div>\n                <img alt={overview.imagetitle} src={overviewImage} />\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{overview.imagetitle}</h5>\n                  </div>\n            </div>\n          </div>\n          </div> \n      })\n    }\n\n    return (\n      <section id=\"resume\">\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Method</span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {overview}\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default Method;\n\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_RNNgsp.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\RNN Google Stock Price with Tensorflow\\Results_RNNgsp.js",["347"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">All models were trained for 150 epochs. As seen in the images below, the predicted values are within the same scale as the labels when compared to the past 3 months (66 weekdays) for Google and past year (261 weekdays) for Google and AMD. More importantly, the general trend is followed for 3/4 of the plots, showing the model is capable of understanding when prices drops or increases are expected to occur. <br>\n            </br>However, it should be noted that for Google stocks, the model is consistently underestimating the price. This may be due to overwhelming market optimism for Google over the past decade that the model does not have the data to factor in. <br>\n            </br>For the AMD year long prediction, the model was very closely following the actual prices until the last 50 days. This may be due to AMD announcing record profits or a new, promising product that the model does not have information to. As such, it did not overextend the rise in stock prices like it did in reality.\n            This is consistent with the AMD 3 month prediction, which performed the worst out of all 4 plots. \n            <br></br>To improve the model, the number of LSTM layers, neurons, batch size, dropout rate, and optimizer could be experimented with.</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\RNN Google Stock Price with Tensorflow\\Method_RNNgsp.js",["348","349"],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_SOM.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Self Organizing Maps\\Results_SOM.js",["350"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">As seen in the plot below, the legend goes from black to white for the lowest to highest Mean Interneuron Distances. As such, white nodes are the outliers because they do not belong to any cluster since their distance are farthest from any winning node. The outlier white nodes appear to be in coordinate (3,1) and (10,10). <br>\n            </br>In addition, the red circles indicate that the customer got denied, whereas the green squares means they got approved. There are no customers in coordinate (10,10), so all the potential frauds lie in (3,1). As seen on the right image, 23 potential frauds are within outlier. More importantly, 15 out of the 23 customers got approved. <br>\n            </br>To further validate this model, the SOM can be rerun several times then have the customer IDs compared to see if any consistently reappearing. Furthermore, the customer IDs can thus be used to investigate the specifics of this customer and how they got approved.</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Self Organizing Maps\\Method_SOM.js",["351","352"],"import React, { Component } from 'react';\n\nclass Method extends Component {\n  \n  render() {\n\n    if(this.props.data){\n        var overview = this.props.data.overview.map(function(overview){\n          var overviewImage = 'images/portfolio/' + overview.image;\n          return <div key={overview.title}><h2>{overview.title}</h2>\n          <h5>{overview.title2}</h5><p>{overview.description1a}<br></br>{overview.description1b}<br></br>{overview.description1c}<br></br><a href={overview.description1d} target=\"_blank\">{overview.description1d}</a><br></br><a href={overview.description1e} target=\"_blank\">{overview.description1e}</a></p>\n          <div key={overview.imagetitle} className=\"columns portfolio-item\">\n            <div>\n                <img alt={overview.imagetitle} src={overviewImage} />\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{overview.imagetitle}</h5>\n                  </div>\n            </div>\n          </div>\n          </div> \n      })\n    }\n\n    return (\n      <section id=\"resume\">\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Method</span></h1>\n         </div>\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {overview}\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default Method;\n\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_RBM.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Restricted Boltzmann Machines\\Results_RBM.js",["353"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">After 20 epochs, the training and test losses achieved were 0.228 and 0.204 respectively. This means that the RBM model was able to predict whether a user liked or disliked a new movie roughly 4/5 times. </p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\Restricted Boltzmann Machines\\Method_RBM.js",["354","355"],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_AE.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\AutoEncoders\\Results_AE.js",["356"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">After 500 epochs, the training and test losses achieved were 0.8077 and 0.8958 respectively. This means that the Stacked AutoEncoder model was able to accurately predict the rating a user would give to a film within ±1 star.<br>\n            </br>To further improve the model, the number of nodes in the hidden layers as well as the number of hidden layers can be experimented with. In addition, dropout layers may be useful to prevent overfitting of the model.</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\DL\\AutoEncoders\\Method_AE.js",["357","358"],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_CH.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\California Housing Linear Regression\\Method_CH.js",["359","360"],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\California Housing Linear Regression\\Results_CH.js",["361"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">Based on the scatter plot below, the relationship between the predicted values and the label values are fairly linear for the most part. In addition, the histogram of the residuals (y_test minus predictions) look similar to a normal distribution, indicating that linear regression was a decent choice for this model. <br>\n            </br>Lastly, the Mean Absolute Error and Root Mean Squared Error show that the prediction results were off by $50104 and $69079 respectively when predicting the housing price. This is a decent error when considering the housing prices can scale up to $500001.</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-thirds s-bgrid-thirds cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_BC.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\Breast Cancer Logistic Regression\\Results_BC.js",["362"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    if (this.props.data) {\n      var projects2 = this.props.data.projects2.map(function (projects2) {\n        var projectImage = 'images/portfolio/' + projects2.image;\n        \n        return (\n          <div key={projects2.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects2.url} title={projects2.title}>\n                <img alt={projects2.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects2.title}</h5>\n                    <p>{projects2.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">Based on the Classification Report below, the Logistic Regression Model achieved an overall accuracy of 98%, with a high precision and recall. Similarly, the K-Nearest Neighbour Model achieved an accuracy of 97% with comparable precision and recall as well. However, the K-Nearest Neighbour model did perform dangerously worse by incorrectly misclassifying 5 malignant patients as benign. This is a very bad false negative, as the individuals would forego treatment believing they are fine. Overall though, both model performed similarly well on the test set. </p>\n            <h1>Logistic Regression</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n            <h1>K-Nearest Neighbour</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects2}\n            </div>\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\Breast Cancer Logistic Regression\\Method_BC.js",["363","364"],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_DS.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\Disease Survival K Means Clustering\\Results_DS.js",["365"],"import React, { Component } from 'react';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n  \n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">The model was able to successfully form two clusters, however it is difficult the evaluate the accuracy due to the lack of labels on the survival. In addition, the final cluster centroids contain far more coordinate points than the original dataset due to One Hot Encoding all the categorical data (Finding, View, X-Ray, and Location columns)</p>\n            <div id=\"portfolio-wrapper\" className=\"bgrid s-bgrid cf\">\n              {projects}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n","C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\Disease Survival K Means Clustering\\Method_DS.js",["366","367"],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\Project_CC.js",[],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\CC Default RFDTLR\\Method_CC.js",["368","369"],"C:\\Users\\Josph.Mok\\resume-app\\src\\Components\\ML\\CC Default RFDTLR\\Results_CC.js",["370","371"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player';\n\nclass Results extends Component {\n  render() {\n    if (this.props.data) {\n      var projects = this.props.data.projects.map(function (projects) {\n        var projectImage = 'images/portfolio/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects.url} title={projects.title} target=\"_blank\">\n                <img alt={projects.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    if (this.props.data) {\n      var projects2 = this.props.data.projects2.map(function (projects2) {\n        var projectImage = 'images/portfolio/' + projects2.image;\n        \n        return (\n          <div key={projects2.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects2.url} title={projects2.title}>\n                <img alt={projects2.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects2.title}</h5>\n                    <p>{projects2.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    if (this.props.data) {\n      var projects3 = this.props.data.projects3.map(function (projects3) {\n        var projectImage = 'images/portfolio/' + projects3.image;\n        \n        return (\n          <div key={projects3.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href={projects3.url} title={projects3.title}>\n                <img alt={projects3.title} src={projectImage} />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects3.title}</h5>\n                    <p>{projects3.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n            <h1>Results</h1>\n            <p align=\"left\">Based on the images below, the Logistic Regression and Random Forest models both had similar results at 81% and 82% accuracies overall. Decision tree performed the worst, especially when predicting the clients that defaulted payments at 38% precision. Similarly, both Random Forest and Logistic Regression had worse precision for predicting defaulting clients as well. However, this may be due to training on an unbalanced dataset. 78% of the labels were for paid clients, whereas 22% were defaulting clients. As such, a more balanced labelled dataset would help improve on the precision for the defaulting classification label. </p>\n            <h1>Decision Tree Classification</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects}\n            </div>\n          \n            <h1>Random Forest Classification</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects2}\n            </div>\n\n            <h1>Logistic Regression</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-halves s-bgrid-halves cf\">\n              {projects3}\n            </div>\n\n          </div>\n        </div>\n      </section>\n    ); \n  }\n}\n\nexport default Results;\n",{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":24,"column":16,"nodeType":"378","messageId":"379","endLine":24,"endColumn":20},{"ruleId":"376","severity":1,"message":"380","line":19,"column":11,"nodeType":"378","messageId":"379","endLine":19,"endColumn":25},{"ruleId":"381","severity":1,"message":"382","line":26,"column":13,"nodeType":"383","endLine":26,"endColumn":62},{"ruleId":"376","severity":1,"message":"384","line":12,"column":11,"nodeType":"378","messageId":"379","endLine":12,"endColumn":15},{"ruleId":"376","severity":1,"message":"385","line":13,"column":11,"nodeType":"378","messageId":"379","endLine":13,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":41,"column":33,"nodeType":"388","endLine":41,"endColumn":48},{"ruleId":"386","severity":1,"message":"387","line":8,"column":61,"nodeType":"388","endLine":8,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},{"ruleId":"376","severity":1,"message":"389","line":2,"column":9,"nodeType":"378","messageId":"379","endLine":2,"endColumn":14},{"ruleId":"376","severity":1,"message":"390","line":10,"column":12,"nodeType":"378","messageId":"379","endLine":10,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":44,"column":33,"nodeType":"388","endLine":44,"endColumn":48},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},{"ruleId":"372","replacedBy":"391"},{"ruleId":"374","replacedBy":"392"},{"ruleId":"386","severity":1,"message":"387","line":10,"column":135,"nodeType":"388","endLine":10,"endColumn":150},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"376","severity":1,"message":"393","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},{"ruleId":"376","severity":1,"message":"393","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},{"ruleId":"376","severity":1,"message":"393","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},{"ruleId":"376","severity":1,"message":"393","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},{"ruleId":"376","severity":1,"message":"393","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":163,"nodeType":"388","endLine":11,"endColumn":178},{"ruleId":"376","severity":1,"message":"393","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":163,"nodeType":"388","endLine":11,"endColumn":178},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":163,"nodeType":"388","endLine":11,"endColumn":178},{"ruleId":"386","severity":1,"message":"387","line":11,"column":249,"nodeType":"388","endLine":11,"endColumn":264},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":163,"nodeType":"388","endLine":11,"endColumn":178},{"ruleId":"386","severity":1,"message":"387","line":11,"column":249,"nodeType":"388","endLine":11,"endColumn":264},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":172,"nodeType":"388","endLine":11,"endColumn":187},{"ruleId":"386","severity":1,"message":"387","line":11,"column":258,"nodeType":"388","endLine":11,"endColumn":273},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":172,"nodeType":"388","endLine":11,"endColumn":187},{"ruleId":"386","severity":1,"message":"387","line":11,"column":258,"nodeType":"388","endLine":11,"endColumn":273},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":172,"nodeType":"388","endLine":11,"endColumn":187},{"ruleId":"386","severity":1,"message":"387","line":11,"column":258,"nodeType":"388","endLine":11,"endColumn":273},{"ruleId":"386","severity":1,"message":"387","line":11,"column":172,"nodeType":"388","endLine":11,"endColumn":187},{"ruleId":"386","severity":1,"message":"387","line":11,"column":258,"nodeType":"388","endLine":11,"endColumn":273},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":172,"nodeType":"388","endLine":11,"endColumn":187},{"ruleId":"386","severity":1,"message":"387","line":11,"column":258,"nodeType":"388","endLine":11,"endColumn":273},{"ruleId":"386","severity":1,"message":"387","line":12,"column":61,"nodeType":"388","endLine":12,"endColumn":76},{"ruleId":"386","severity":1,"message":"387","line":11,"column":172,"nodeType":"388","endLine":11,"endColumn":187},{"ruleId":"386","severity":1,"message":"387","line":11,"column":258,"nodeType":"388","endLine":11,"endColumn":273},{"ruleId":"386","severity":1,"message":"387","line":11,"column":172,"nodeType":"388","endLine":11,"endColumn":187},{"ruleId":"386","severity":1,"message":"387","line":11,"column":258,"nodeType":"388","endLine":11,"endColumn":273},{"ruleId":"376","severity":1,"message":"393","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":13,"column":61,"nodeType":"388","endLine":13,"endColumn":76},"no-native-reassign",["394"],"no-negated-in-lhs",["395"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'resumeDownload' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'city' is assigned a value but never used.","'networks' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Route' is defined but never used.","'project' is assigned a value but never used.",["394"],["395"],"'ReactPlayer' is defined but never used.","no-global-assign","no-unsafe-negation"]