import React, { Component } from 'react';
import ReactPlayer from 'react-player';

class Results extends Component {
  render() {
    if (this.props.data) {
      var projects = this.props.data.projects.map(function (projects) {
        var projectImage = 'images/portfolio/' + projects.image;
        
        return (
          <div key={projects.title} className="columns portfolio-item">
            <div className="item-wrap">
              <a href={projects.url} title={projects.title} target="_blank">
                <img alt={projects.title} src={projectImage} />
                <div className="overlay">
                  <div className="portfolio-item-meta">
                    <h5>{projects.title}</h5>
                    <p>{projects.category}</p>
                  </div>
                </div>
              </a>
            </div>
          </div>
        )
      })
    }
    if (this.props.data) {
      var projects2 = this.props.data.projects2.map(function (projects2) {
        var projectImage = 'images/portfolio/' + projects2.image;
        
        return (
          <div key={projects2.title} className="columns portfolio-item">
            <div className="item-wrap">
              <a href={projects2.url} title={projects2.title}>
                <img alt={projects2.title} src={projectImage} />
                <div className="overlay">
                  <div className="portfolio-item-meta">
                    <h5>{projects2.title}</h5>
                    <p>{projects2.category}</p>
                  </div>
                </div>
              </a>
            </div>
          </div>
        )
      })
    }

    if (this.props.data) {
      var projects3 = this.props.data.projects3.map(function (projects3) {
        var projectImage = 'images/portfolio/' + projects3.image;
        
        return (
          <div key={projects3.title} className="columns portfolio-item">
            <div className="item-wrap">
              <a href={projects3.url} title={projects3.title}>
                <img alt={projects3.title} src={projectImage} />
                <div className="overlay">
                  <div className="portfolio-item-meta">
                    <h5>{projects3.title}</h5>
                    <p>{projects3.category}</p>
                  </div>
                </div>
              </a>
            </div>
          </div>
        )
      })
    }

    if (this.props.data) {
      var projects4 = this.props.data.projects4.map(function (projects4) {
        var projectImage = 'images/portfolio/' + projects4.image;
        
        return (
          <div key={projects4.title} className="columns portfolio-item">
            <div className="item-wrap">
              <a href={projects4.url} title={projects4.title}>
                <img alt={projects4.title} src={projectImage} />
                <div className="overlay">
                  <div className="portfolio-item-meta">
                    <h5>{projects4.title}</h5>
                    <p>{projects4.category}</p>
                  </div>
                </div>
              </a>
            </div>
          </div>
        )
      })
    }
  
    if (this.props.data) {
      var projects5 = this.props.data.projects5.map(function (projects5) {
        var projectImage = 'images/portfolio/' + projects5.image;
        
        return (
          <div key={projects5.title} className="columns portfolio-item">
            <div className="item-wrap">
              <a href={projects5.url} title={projects5.title}>
                <img alt={projects5.title} src={projectImage} />
                <div className="overlay">
                  <div className="portfolio-item-meta">
                    <h5>{projects5.title}</h5>
                    <p>{projects5.category}</p>
                  </div>
                </div>
              </a>
            </div>
          </div>
        )
      })
    }
    return (
      <section id="portfolio">

        <div className="row">

          <div className="twelve columns collapsed">
          
            <h1>Results</h1>
            <p align="left">Each book below trained on 40 epochs. The results show 1000 random characters generated by the model, all of which appear to follow the same tone and vibe as the original novels.</p>
            <h1>Shakespeare Text Generation</h1>
            <div id="portfolio-wrapper" className="bgrid s-bgrid cf">
              {projects}
            </div>
            <h1>Tom Sawyer Text Generation</h1>
            <div id="portfolio-wrapper" className="bgrid s-bgrid cf">
              {projects2}
            </div>
            <h1>Pride and Prejudice Text Generation</h1>
            <div id="portfolio-wrapper" className="bgrid s-bgrid cf">
              {projects3}
            </div>            
            <h1>War and Peace Text Generation</h1>
            <div id="portfolio-wrapper" className="bgrid s-bgrid cf">
              {projects4}
            </div>            
            <h1>Meditation Text Generation</h1>
            <div id="portfolio-wrapper" className="bgrid s-bgrid cf">
              {projects5}
            </div>
          </div>
        </div>
      </section>
    ); 
  }
}

export default Results;
