{
  "main": {
    "name":"Simple Chatbot",
    "description":"In this project, an RNN uses End-to-End Memory Networks and LSTM to create a simple chatbot that can answer questions based on a given story. The model will be trained on the Facebook Babi Dataset, which consists of three components: Story, Question, and Answer",
    "github":"https://github.com/hjmok/Chatbot-with-End-to-End-Memory-Network",
    "social":[
      {
        "name":"linkedin",
        "url":"https://www.linkedin.com/in/hojin-joseph-mok-31153a163/",
        "className":"fa fa-linkedin"
      },
      {
        "name":"github",
        "url":"https://github.com/hjmok/Chatbot-with-End-to-End-Memory-Network",
        "className":"fa fa-github"
      }
    ]
  },
  "method":{
    "overview":[
      {	
	"title":"Datasets and Overview",
        "description1a":"For this project, Keras was used as the primary library for creating the model.",
        "description1b":"The Babi dataset from Facebook Research consists of three components: Story, Question, and Answer. The chatbot model should be able to predict the answer based on a query provided to it in relation to the story, as seen in the example image below. However, one limitation is that the stories and questions must use vocabulary used within the dataset, so no new words can be introduced when testing on new stories. The dataset can be found in the following link. ",
	"description1d":"https://research.fb.com/downloads/babi/",
        "image":"CB_examplestory.JPG"
      },
      {	
	"title":"End-to-End Memory Network",
        "description1a":"The first main part of the chatbot model consists of processing from an End-to-End Memory Network, pictured below. This network is made up of three main components, which are detailed below.",
        "description1b":"To learn more about End-to-End networks, please use the following link to the paper:",
        "description1d":"https://arxiv.org/pdf/1503.08895.pdf",
        "image":"End to End.png"
      },
      {	
	"title2":"1) Input Memory Representation",
        "description1a":"This component considers how the stories are inputed into the Memory Networks. First, the stories come in as discrete inputs {Xi}, circled in purple in the image below.",
        "description1b":"Then Embedding A (red) converts sentences, Xi, into memory vectors, Mi. In addition, Embedding B (green) is used to embed question, q, to give us internal state, u. Internal state, u, will be used to help generate the final prediction in Component 3",
	"description1c":"Lastly, the inner product, u-transposed multiplied by Mi, is calculated and passed through a SoftMax function (blue) to get weights, Pi.",
        "image":"CB_e2e1.png"
      },
      {	
	"title2":"2) Output Memory Representation",
        "description1a":"This component creates the output vectors that will generate the final prediction after undergoing processing by the Input Memory Representation.",
        "description1b":"Each sentence, X, has a corresponding output vector, C. As such, Embedding C (circled in purple) is used to convert sentences, Xi, into output vectors, Ci",
	"description1c":"Then, Weighted Sum, O (red), is calculated. O is the sum of the products, Pi (weights) multiplied by Ci (output vectors).",
        "image":"cb_e2e2.png"
      },
      {	
	"title2":"3) Generating Final Prediction",
        "description1a":"Finally, weighted sum, O, and internal question state, u, are passed through a final weight matrix, W and a SoftMax to produce the predicted label.",
        "image":"cb_e2e3.png"
      },      {	
	"title":"LSTM Layer",
        "description1a":"The example above was for a single End-to-End memory network layer. However, we can adjust it to go through multiple layers, as well as RNN and LSTM as seen in the image below.",
        "description1b":"For this model 32 LSTM layers were added before the final Softmax activation function for generating the final prediction. For more details, please look at my code on Github:",
	"description1d":"https://github.com/hjmok/Chatbot-with-End-to-End-Memory-Network",
        "image":"CB_e2e4.png"
      }
    ]
  },
  "results":{
    "projects": [
      {
        "title":"Train vs Test Accuracy Plot",
        "category":"",
        "image":"cb_loss.JPG"
      },
      {
        "title":"Example New Story 1",
        "category":"",
        "image":"cb_s1.JPG"
      },
      {
        "title":"Example New Story 2",
        "category":"",
        "image":"cb_s2.JPG"
      },
      {
        "title":"Example New Story 3",
        "category":"",
        "image":"cb_s3.JPG"
      }   
   ] 
  }
}
